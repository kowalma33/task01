1. done app using spring boot (use our backend masterdata modules as reference)

2. Create model, mapping, repository, service for an object (let's call is "Example"), which has 2 field: id (autogenerated), description (String)
Use h2 database, use liquibase change sets to initialize it on startup

3. Create getAll, getById(Long id), deleteById(Long id), add(Example added), update(Long id, Example updated) methods in service

4. Add unit tests (can be done without dbunit)

5. Create rest-api for this service (
	GET (for getAll), GET (for getById), DELETE, POST, PUT methods respectively

	PUT, GET (for getById), DELETE endpoints will look like "localhost:<port>/example/{id}"

	GET (for getAll), POST "localhost:<port_of_app_running_locally>/example"
)

6. The result: you should be able to run this app locally (mvn spring-boot:run) and query api that you created via curl, e.g. create few Example objects, list them all via getAll, delete/update some of them.
I.e. GET request will look like "curl localhost:8080/example/12345"
Next (7) part can be done after all previous ones are reviewed.

7. create a separate branch in your repository, push this code and create pull request.

8* Run unit test using mysql database, which should be accessed via downloaded docker image. (You will need to install Docker too for this)
